name: CI-CD

on:
  push:
    branches:
      - main

env:
  S3_BUCKET_NAME: myauctionbucket
  RESOURCE_PATH: ./src/main/resources/application.yaml
  CODE_DEPLOY_APPLICATION_NAME: auction-code-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: auction-server

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt


      # [1]
      - name: Set yaml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          spring.datasource.url: ${{ secrets.RDS_URL }}
          spring.datasource.username: ${{ secrets.RDS_USERNAME }}
          spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
          spring.mail.username: ${{ secrets.MAIL_USERNAME }}
          spring.mail.password: ${{ secrets.MAIL_PASSWORD }}
          jwt.secret: ${{ secrets.JWT_SECRET }}
          spring.redis.host: ${{ secrets.REDIS_HOST }}
#          spring.jpa.hibernate.ddl-auto: update
          spring.profiles.active: production
          cloud.aws.credentials.access-key : ${{ secrets.AWS_ACCESS_KEY_ID }}
          cloud.aws.credentials.secret-key : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cloud.aws.region.static: ${{ secrets.AWS_REGION }}
          cloud.aws.stack.auto: false
          cloud.aws.s3.bucket: ${{ env.S3_BUCKET_NAME }}
          OPENVIDU_URL: ${{ secrets.OPENVIDU_URL }}
          OPENVIDU_SECRET: ${{ secrets.OPENVIDU_SECRET }}
          INIT_FILE_PATH: /home/ubuntu/init-img/
      # [Gradle Caching]
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

        # [2]
      - name: Build with Gradle
        run: ./gradlew build -x test
        shell: bash
        
        # [3]
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

        # [4]
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

        # [5]
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/deploy-file/deploy.zip

        # [6]
      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=deploy-file/deploy.zip